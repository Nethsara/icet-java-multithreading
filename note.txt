Q1
class Demo{
	public static void main(String args[]){
		for (int i = 0; i < 100; i++){
			System.out.println("Program A : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}
		
		for (int i = 0; i < 100; i++){
			System.out.println("Program B : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}
		
	}
}

/////////////////////////////////////////////////////////////////////////////////
Q2
class MyThread extends Thread{
	public void run(){
	for (int i = 0; i < 100; i++){
			System.out.println("Program B : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}		
	}
}
class Demo{
	public static void main(String args[]){
		for (int i = 0; i < 100; i++){
			System.out.println("Program A : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}
	}
}
//////////////////////////////////////////////////////////////////
Q3
class MyThread extends Thread{
	public void run(){
	for (int i = 0; i < 100; i++){
			System.out.println("Program B : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}		
	}
}
class Demo{
	public static void main(String args[]){
		for (int i = 0; i < 100; i++){
			System.out.println("Program A : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}
		MyThread t1=new MyThread();
	}
}
//////////////////////////////////////////////////////////////
Q4
class MyThread extends Thread{
	public void run(){
	for (int i = 0; i < 100; i++){
			System.out.println("Program B : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}		
	}
}
class Demo{
	public static void main(String args[]){
		for (int i = 0; i < 100; i++){
			System.out.println("Program A : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}
		MyThread t1=new MyThread();
		t1.start();
	}
}
///////////////////////////////////////////////////////////////
Q5
class MyThread extends Thread{
	public void run(){
	for (int i = 0; i < 100; i++){
			System.out.println("Program B : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}		
	}
}
class Demo{
	public static void main(String args[]){
		MyThread t1=new MyThread();
		t1.start();
		for (int i = 0; i < 100; i++){
			System.out.println("Program A : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}
		
	}
}

///////////////////////////////////////////////////////////////
Q6
class MyThreadA extends Thread{
	public void run(){
	for (int i = 0; i < 100; i++){
			System.out.println("Program A : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}		
	}
}
class MyThreadB extends Thread{
	public void run(){
	for (int i = 0; i < 100; i++){
			System.out.println("Program B : "+i);
			try{Thread.sleep(100);}catch(Exception ex){}
		}		
	}
}
class Demo{
	public static void main(String args[]){
		new MyThreadA().start();
		new MyThreadB().start();
	}
}

///////////////////////////////////////////////////////////////
Q7 method "run()" vs "start()"
==============================
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
class MyFrame extends JFrame{
	private JButton exitButton;
	
	MyFrame(){
		setSize(300,300);
		setTitle("MyFrame");
		setDefaultCloseOperation(EXIT_ON_CLOSE); 
		setLocationRelativeTo(null);
		
		exitButton=new JButton();
		exitButton.setText("Exit");
		exitButton.setFont(new Font("",1,30));
		exitButton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent evt){
				int i=0;
				while(true){
					System.out.println("i : "+i++);
				}
			}
		});
		add(exitButton);
	}	
}
class Demo{
	public static void main(String args[]){
		new MyFrame().setVisible(true);
	}
}

///////////////////////////////////////////////////////////////
Q8
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
class MyFrame extends JFrame{
	private JButton exitButton;
	private JTextField text;
	MyFrame(){
		setSize(300,300);
		setTitle("MyFrame");
		setDefaultCloseOperation(DISPOSE_ON_CLOSE); 
		setLocationRelativeTo(null);
		setLayout(new FlowLayout());
		
		text=new JTextField(10);
		text.setFont(new Font("",1,30));
		add(text);
		
		exitButton=new JButton();
		exitButton.setText("Exit");
		exitButton.setFont(new Font("",1,30));
		exitButton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent evt){
				String name=text.getText();
				class MyThread extends Thread{
					public void run(){
						int i=0;
						while(true){
							System.out.println(name+" : "+i++);
						}
					}
				}
				new MyThread().start();
				
			}
		});
		add(exitButton);
	}	
}
class Demo{
	public static void main(String args[]){
		new MyFrame().setVisible(true);
	}
}

///////////////////////////////////////////////////////////////
Q9
class Demo{
	public static void main(String args[]){
		Thread t1=Thread.currentThread();
		System.out.println("Name : "+t1.getName());
		System.out.println("Priority : "+t1.getPriority());
		
		t1.setName("My Main");
		System.out.println("Name : "+t1.getName());
	}
}

///////////////////////////////////////////////////////////////
Q10
class MyThread extends Thread{
	public void run(){
		//
	}
}
class Demo{
	public static void main(String args[]){
		MyThread t1=new MyThread(); 
		MyThread t2=new MyThread(); 
		MyThread t3=new MyThread(); 
		System.out.println("Name t1 : "+t1.getName());
		System.out.println("Name t1 : "+t2.getName());
		System.out.println("Name t1 : "+t3.getName());
	}
}

///////////////////////////////////////////////////////////////
Q11
class MyThread extends Thread{
	public void run(){
		Thread t=currentThread();
		System.out.println("Name : "+t.getName());
	}
}
class Demo{
	public static void main(String args[]){
		MyThread t1=new MyThread(); 
		t1.setName("MyThread");
		t1.start(); //vs t1.run();
	}
}

///////////////////////////////////////////////////////////////
Q12 Exercise
============
class MyThread extends Thread{
	MyThread(String name){
		setName(name);
	}
	public void run(){
		for(int i=0; i<100; i++){
			System.out.println(getName()+" : "+i);
			try{Thread.sleep(100);}catch(InterruptedException ex){}
		}
	}
}
class Demo{
	public static void main(String args[]){
		MyThread t1=new MyThread("One"); 
		MyThread t2=new MyThread("Two"); 
		MyThread t3=new MyThread("Three"); 
		
		t1.start();
		t2.start();
		t3.start();
	}
}

///////////////////////////////////////////////////////////////
Q13
class MyThread extends Thread{
	MyThread(String name){
		setName(name);
	}
	public void run(){
		for(int i=0; i<100; i++){
			System.out.println(getName()+" : "+i);
			try{Thread.sleep(100);}catch(InterruptedException ex){}
		}
	}
}
class Demo{
	public static void main(String args[]){
		MyThread t1=new MyThread("One"); 
		MyThread t2=new MyThread("Two"); 
		MyThread t3=new MyThread("Three"); 
		
		System.out.println("State t1 : "+t1.getState());
		System.out.println("State t2 : "+t2.getState());
		System.out.println("State t3 : "+t3.getState());
		
	}
}

///////////////////////////////////////////////////////////////
Q14 From Q13
============
class MyThread extends Thread{
	MyThread(String name){
		setName(name);
	}
	public void run(){
		for(int i=0; i<100; i++){
			System.out.println(getName()+" : "+i);
			try{Thread.sleep(100);}catch(InterruptedException ex){}
		}
	}
}
class Demo{
	public static void main(String args[]){
		MyThread t1=new MyThread("One"); 
		MyThread t2=new MyThread("Two"); 
		MyThread t3=new MyThread("Three"); 
		
		System.out.println("State t1 : "+t1.getState());
		System.out.println("State t2 : "+t2.getState());
		System.out.println("State t3 : "+t3.getState());
		
		t1.start();
		t2.start();
		t3.start();
		
		System.out.println("State t1 : "+t1.getState());
		System.out.println("State t2 : "+t2.getState());
		System.out.println("State t3 : "+t3.getState());
	}
}

///////////////////////////////////////////////////////////////
Q15 From Q13
============
class MyThread extends Thread{
	MyThread(String name){
		setName(name);
	}
	public void run(){
		for(int i=0; i<100; i++){
			System.out.println(getName()+" : "+i);
			//try{Thread.sleep(100);}catch(InterruptedException ex){}
		}
	}
}
class Demo{
	public static void main(String args[]){
		MyThread t1=new MyThread("One"); 
		MyThread t2=new MyThread("Two"); 
		MyThread t3=new MyThread("Three"); 
		
		System.out.println("State t1 : "+t1.getState());
		System.out.println("State t2 : "+t2.getState());
		System.out.println("State t3 : "+t3.getState());
		
		t1.start();
		t2.start();
		t3.start();
		
		try{Thread.sleep(2000);}catch(InterruptedException ex){}
		System.out.println("State t1 : "+t1.getState());
		System.out.println("State t2 : "+t2.getState());
		System.out.println("State t3 : "+t3.getState());
	}
}

///////////////////////////////////////////////////////////////
	Thread Priority
///////////////////////////////////////////////////////////////
Q16
class MyThread extends Thread{
	MyThread(String name){
		setName(name);
	}
	public void run(){
		for(int i=0; i<100; i++){
			System.out.println(getName()+" : "+i);
			//try{Thread.sleep(100);}catch(InterruptedException ex){}
		}
	}
}
class Demo{
	public static void main(String args[]){
		MyThread t1=new MyThread("One"); 
		MyThread t2=new MyThread("Two"); 
		MyThread t3=new MyThread("Three"); 
		
		t1.setPriority(6);
		t2.setPriority(7);
		t3.setPriority(8);
		
		t1.start();
		t2.start();
		t3.start();
		
	}
}

///////////////////////////////////////////////////////////////
	Thread Yielding
///////////////////////////////////////////////////////////////
Q17
class MyThread extends Thread{
	MyThread(String name){
		setName(name);
	}
	public void run(){
		for(int i=0; i<100; i++){
			System.out.println(getName()+" : "+i);
			if(i%10==0){
				Thread.yield();
			}
			//try{Thread.sleep(100);}catch(InterruptedException ex){}
		}
	}
}
class Demo{
	public static void main(String args[]){
		MyThread t1=new MyThread("One"); 
		MyThread t2=new MyThread("Two"); 
		MyThread t3=new MyThread("Three"); 
		
		t1.start();
		t2.start();
		t3.start();
		
	}
}

///////////////////////////////////////////////////////////////
		Join Threads
///////////////////////////////////////////////////////////////
Q18
class MyThread extends Thread{
	MyThread(String name){
		setName(name);
	}
	public void run(){
		for(int i=0; i<100; i++){
			System.out.println(getName()+" : "+i);
			try{Thread.sleep(100);}catch(InterruptedException ex){}
		}
	}
}
class Demo{
	public static void main(String args[]){
		MyThread t1=new MyThread("One");
		t1.start();
		for(int i=0; i<100; i++){
			System.out.println("main : "+i);
			try{Thread.sleep(100);}catch(InterruptedException ex){}
			if(i==50){
				try{t1.join();}catch(InterruptedException ex){}
			}
		}		
	}
}

///////////////////////////////////////////////////////////////
Q19

///////////////////////////////////////////////////////////////
Q20

///////////////////////////////////////////////////////////////
Q21

///////////////////////////////////////////////////////////////
Q22

///////////////////////////////////////////////////////////////
Q23

///////////////////////////////////////////////////////////////
Q24

///////////////////////////////////////////////////////////////
Q25

///////////////////////////////////////////////////////////////
Q26

///////////////////////////////////////////////////////////////
Q27

///////////////////////////////////////////////////////////////
Q28

///////////////////////////////////////////////////////////////
Q29

///////////////////////////////////////////////////////////////
Q30



play sound